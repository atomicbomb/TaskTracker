<Window x:Class="TaskTracker.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TaskTracker.Views"
        mc:Ignorable="d"
        Title="TaskTracker - Settings" 
        Height="700" 
        Width="600"
        MinHeight="600" 
        MinWidth="500"
        Style="{StaticResource MainWindowStyle}"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize">
    
    <Window.Resources>
        <!-- Converters -->
        <local:BoolToTestButtonTextConverter x:Key="BoolToTestButtonTextConverter" />
        <local:InverseBoolConverter x:Key="InverseBoolConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Header -->
        <TextBlock Grid.Row="0" 
                   Text="Settings" 
                   FontSize="24" 
                   FontWeight="Bold" 
                   Margin="0,0,0,20"
                   Foreground="{StaticResource TextPrimaryBrush}"/>
        
        <!-- Settings Content -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="20">
                
                <!-- JIRA Integration Section -->
                <GroupBox Header="JIRA Integration" 
                          Padding="15"
                          Margin="0,0,0,20"
                          BorderBrush="{StaticResource BorderBrush}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="15"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Server URL:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding ServerUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Email:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="API Token:" VerticalAlignment="Center"/>
                        <PasswordBox Grid.Row="4" Grid.Column="1" Name="ApiTokenBox" PasswordChanged="OnPasswordChanged"/>
                        
                        <TextBlock Grid.Row="6" Grid.Column="0" Text="Prompt Interval:" VerticalAlignment="Center"/>
                        <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                            <TextBox Text="{Binding PromptInterval}" Width="60" Margin="0,0,5,0"/>
                            <TextBlock Text="minutes" VerticalAlignment="Center"/>
                        </StackPanel>
                        
                        <TextBlock Grid.Row="8" Grid.Column="0" Text="Update Interval:" VerticalAlignment="Center"/>
                        <StackPanel Grid.Row="8" Grid.Column="1" Orientation="Horizontal">
                            <TextBox Text="{Binding UpdateInterval}" Width="60" Margin="0,0,5,0"/>
                            <TextBlock Text="minutes" VerticalAlignment="Center"/>
                        </StackPanel>
                        
                        <Button Grid.Row="10" Grid.Column="1" 
                                Content="{Binding IsTestingConnection, Converter={StaticResource BoolToTestButtonTextConverter}}"
                                Style="{StaticResource SecondaryButtonStyle}"
                                Command="{Binding TestConnectionCommand}"
                                IsEnabled="{Binding IsTestingConnection, Converter={StaticResource InverseBoolConverter}}"
                                HorizontalAlignment="Left"
                                Width="120"/>
                        
                        <TextBlock Grid.Row="12" Grid.Column="1" 
                                   Text="{Binding TestConnectionResult}" 
                                   TextWrapping="Wrap"
                                   Foreground="{StaticResource TextSecondaryBrush}"/>
                    </Grid>
                </GroupBox>
                
                <!-- Tracking Time Section -->
                <GroupBox Header="Tracking Time" 
                          Padding="15"
                          Margin="0,0,0,20"
                          BorderBrush="{StaticResource BorderBrush}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Start Time:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding TrackingStartTime}" Width="100" HorizontalAlignment="Left"/>
                        
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="End Time:" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding TrackingEndTime}" Width="100" HorizontalAlignment="Left"/>
                        
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Prompt Timeout:" VerticalAlignment="Center"/>
                        <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
                            <TextBox Text="{Binding PromptTimeout}" Width="60" Margin="0,0,5,0"/>
                            <TextBlock Text="seconds" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>
                
                <!-- Lunch Section -->
                <GroupBox Header="Lunch Settings" 
                          Padding="15"
                          Margin="0,0,0,20"
                          BorderBrush="{StaticResource BorderBrush}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Column="0" Text="Default Duration:" VerticalAlignment="Center"/>
                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <TextBox Text="{Binding DefaultLunchDuration}" Width="60" Margin="0,0,5,0"/>
                            <TextBlock Text="minutes" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>
                
                <!-- Appearance Section -->
                <GroupBox Header="Appearance" 
                          Padding="15"
                          Margin="0,0,0,20"
                          BorderBrush="{StaticResource BorderBrush}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Column="0" Text="Theme:" VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="1" 
                                  ItemsSource="{Binding AvailableThemes}"
                                  SelectedItem="{Binding SelectedTheme}"
                                  Width="120" 
                                  HorizontalAlignment="Left"/>
                    </Grid>
                </GroupBox>
                
            </StackPanel>
        </ScrollViewer>
        
        <!-- Buttons -->
        <StackPanel Grid.Row="2" 
                    Orientation="Horizontal" 
                    HorizontalAlignment="Right"
                    Margin="0,20,0,0">
            <Button Content="Save" 
                    Style="{StaticResource PrimaryButtonStyle}"
                    Command="{Binding SaveSettingsCommand}"
                    IsDefault="True"
                    Width="80"
                    Margin="0,0,10,0"/>
            <Button Content="Cancel" 
                    Style="{StaticResource SecondaryButtonStyle}"
                    Command="{Binding CancelCommand}"
                    IsCancel="True"
                    Width="80"/>
        </StackPanel>
    </Grid>
</Window>
